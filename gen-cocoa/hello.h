/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

#import <Foundation/Foundation.h>

#import "TProtocol.h"
#import "TApplicationException.h"
#import "TProtocolException.h"
#import "TProtocolUtil.h"
#import "TProcessor.h"
#import "TObjective-C.h"
#import "TBase.h"

#import "shared.h"

enum Operation {
  Operation_ADD = 1,
  Operation_SUBTRACT = 2,
  Operation_MULTIPLY = 3,
  Operation_DIVIDE = 4
};

typedef int32_t MyInteger;

@interface Work : NSObject <TBase, NSCoding> {
  int32_t __num1;
  int32_t __num2;
  int __op;
  NSString * __comment;

  BOOL __num1_isset;
  BOOL __num2_isset;
  BOOL __op_isset;
  BOOL __comment_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=num1, setter=setNum1:) int32_t num1;
@property (nonatomic, getter=num2, setter=setNum2:) int32_t num2;
@property (nonatomic, getter=op, setter=setOp:) int op;
@property (nonatomic, retain, getter=comment, setter=setComment:) NSString * comment;
#endif

- (id) init;
- (id) initWithNum1: (int32_t) num1 num2: (int32_t) num2 op: (int) op comment: (NSString *) comment;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) num1;
- (void) setNum1: (int32_t) num1;
#endif
- (BOOL) num1IsSet;

#if !__has_feature(objc_arc)
- (int32_t) num2;
- (void) setNum2: (int32_t) num2;
#endif
- (BOOL) num2IsSet;

#if !__has_feature(objc_arc)
- (int) op;
- (void) setOp: (int) op;
#endif
- (BOOL) opIsSet;

#if !__has_feature(objc_arc)
- (NSString *) comment;
- (void) setComment: (NSString *) comment;
#endif
- (BOOL) commentIsSet;

@end

@interface InvalidOperation : NSException <TBase, NSCoding> {
  int32_t __what;
  NSString * __why;

  BOOL __what_isset;
  BOOL __why_isset;
}

#if TARGET_OS_IPHONE || (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5)
@property (nonatomic, getter=what, setter=setWhat:) int32_t what;
@property (nonatomic, retain, getter=why, setter=setWhy:) NSString * why;
#endif

- (id) init;
- (id) initWithWhat: (int32_t) what why: (NSString *) why;

- (void) read: (id <TProtocol>) inProtocol;
- (void) write: (id <TProtocol>) outProtocol;

- (void) validate;

#if !__has_feature(objc_arc)
- (int32_t) what;
- (void) setWhat: (int32_t) what;
#endif
- (BOOL) whatIsSet;

#if !__has_feature(objc_arc)
- (NSString *) why;
- (void) setWhy: (NSString *) why;
#endif
- (BOOL) whyIsSet;

@end

@protocol Calculator <NSObject>
- (void) ping;  // throws TException
- (int32_t) add: (int32_t) num1 num2: (int32_t) num2;  // throws TException
- (int32_t) calculate: (int32_t) logid w: (Work *) w;  // throws InvalidOperation *, TException
- (void) zip;  // throws TException
@end

@interface CalculatorClient : NSObject <Calculator> {
  id <TProtocol> inProtocol;
  id <TProtocol> outProtocol;
}
- (id) initWithProtocol: (id <TProtocol>) protocol;
- (id) initWithInProtocol: (id <TProtocol>) inProtocol outProtocol: (id <TProtocol>) outProtocol;
@end

@interface CalculatorProcessor : NSObject <TProcessor> {
  id <Calculator> mService;
  NSDictionary * mMethodMap;
}
- (id) initWithCalculator: (id <Calculator>) service;
- (id<Calculator>) service;
@end

@interface helloConstants : NSObject {
}
+ (int32_t) INT32CONSTANT;
+ (NSMutableDictionary *) MAPCONSTANT;
@end
